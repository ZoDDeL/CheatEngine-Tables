<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <CheatEntries>
    <CheatEntry>
      <ID>125</ID>
      <Description>"version: 15 june 2025"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>119</ID>
      <Description>"godmode"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : bhd.exe
  Version: 
  Date   : 2025-03-27
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(godmode,bhd.exe,89 B7 BC 13 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov esi,[edi+000013C0] // write max hp to esi
  //mov [edi+00001584],#0 // no poison

code:
  mov [edi+000013BC],esi // write to current hp
  jmp return

godmode:
  jmp newmem
  nop
return:
registersymbol(godmode)

[DISABLE]

godmode:
  db 89 B7 BC 13 00 00

unregistersymbol(godmode)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bhd.exe+10F4C2

bhd.exe+10F4A8: 8B 44 24 18        - mov eax,[esp+18]
bhd.exe+10F4AC: A8 02              - test al,02
bhd.exe+10F4AE: 74 04              - je bhd.exe+10F4B4
bhd.exe+10F4B0: 33 F6              - xor esi,esi
bhd.exe+10F4B2: EB 04              - jmp bhd.exe+10F4B8
bhd.exe+10F4B4: 85 F6              - test esi,esi
bhd.exe+10F4B6: 7F 0A              - jg bhd.exe+10F4C2
bhd.exe+10F4B8: A8 01              - test al,01
bhd.exe+10F4BA: B8 01 00 00 00     - mov eax,00000001
bhd.exe+10F4BF: 0F 45 F0           - cmovne esi,eax
// ---------- INJECTING HERE ----------
bhd.exe+10F4C2: 89 B7 BC 13 00 00  - mov [edi+000013BC],esi
// ---------- DONE INJECTING  ----------
bhd.exe+10F4C8: 5F                 - pop edi
bhd.exe+10F4C9: 8B C6              - mov eax,esi
bhd.exe+10F4CB: 5E                 - pop esi
bhd.exe+10F4CC: 5B                 - pop ebx
bhd.exe+10F4CD: C2 0C 00           - ret 000C
bhd.exe+10F4D0: 53                 - push ebx
bhd.exe+10F4D1: 55                 - push ebp
bhd.exe+10F4D2: 56                 - push esi
bhd.exe+10F4D3: 8B D9              - mov ebx,ecx
bhd.exe+10F4D5: 57                 - push edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"no reload (inf clip)"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Resident Evil / biohazard HD REMASTER
  Version: 
  Date   : 2025-03-26
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(noClip,bhd.exe,29 81 FC 0F 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //sub [ecx+00000FFC],eax
  jmp return

noClip:
  jmp newmem
  nop
return:
registersymbol(noClip)

[DISABLE]

noClip:
  db 29 81 FC 0F 00 00

unregistersymbol(noClip)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bhd.exe+25F804

bhd.exe+25F7EC: CC                 - int 3 
bhd.exe+25F7ED: CC                 - int 3 
bhd.exe+25F7EE: CC                 - int 3 
bhd.exe+25F7EF: CC                 - int 3 
bhd.exe+25F7F0: 8B 81 D0 11 00 00  - mov eax,[ecx+000011D0]
bhd.exe+25F7F6: D1 E8              - shr eax,1
bhd.exe+25F7F8: F6 D0              - not al
bhd.exe+25F7FA: A8 01              - test al,01
bhd.exe+25F7FC: 74 66              - je bhd.exe+25F864
bhd.exe+25F7FE: 8B 81 04 10 00 00  - mov eax,[ecx+00001004]
// ---------- INJECTING HERE ----------
bhd.exe+25F804: 29 81 FC 0F 00 00  - sub [ecx+00000FFC],eax
// ---------- DONE INJECTING  ----------
bhd.exe+25F80A: 8B 81 FC 0F 00 00  - mov eax,[ecx+00000FFC]
bhd.exe+25F810: BA 00 00 00 00     - mov edx,00000000
bhd.exe+25F815: 0F 48 C2           - cmovs eax,edx
bhd.exe+25F818: 89 81 FC 0F 00 00  - mov [ecx+00000FFC],eax
bhd.exe+25F81E: 8B 81 D0 11 00 00  - mov eax,[ecx+000011D0]
bhd.exe+25F824: C1 E8 03           - shr eax,03
bhd.exe+25F827: A8 01              - test al,01
bhd.exe+25F829: 74 39              - je bhd.exe+25F864
bhd.exe+25F82B: A1 C0 C9 D7 00     - mov eax,[bhd.exe+97C9C0]
bhd.exe+25F830: 8B 89 F8 0F 00 00  - mov ecx,[ecx+00000FF8]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"save count 0"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Resident Evil / biohazard HD REMASTER
  Version: 
  Date   : 2025-03-26
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(saveCount,bhd.exe,89 81 6C 47 0E 00 C2) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+000E476C],#0
  jmp return

saveCount:
  jmp newmem
  nop
return:
registersymbol(saveCount)

[DISABLE]

saveCount:
  db 89 81 6C 47 0E 00

unregistersymbol(saveCount)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bhd.exe+2E173

bhd.exe+2E14E: CC                             - int 3 
bhd.exe+2E14F: CC                             - int 3 
bhd.exe+2E150: 8B 81 6C 47 0E 00              - mov eax,[ecx+000E476C]
bhd.exe+2E156: 03 44 24 04                    - add eax,[esp+04]
bhd.exe+2E15A: 79 0D                          - jns bhd.exe+2E169
bhd.exe+2E15C: C7 81 6C 47 0E 00 00 00 00 00  - mov [ecx+000E476C],00000000
bhd.exe+2E166: C2 04 00                       - ret 0004
bhd.exe+2E169: BA 63 00 00 00                 - mov edx,00000063
bhd.exe+2E16E: 3B C2                          - cmp eax,edx
bhd.exe+2E170: 0F 4F C2                       - cmovg eax,edx
// ---------- INJECTING HERE ----------
bhd.exe+2E173: 89 81 6C 47 0E 00              - mov [ecx+000E476C],eax
// ---------- DONE INJECTING  ----------
bhd.exe+2E179: C2 04 00                       - ret 0004
bhd.exe+2E17C: CC                             - int 3 
bhd.exe+2E17D: CC                             - int 3 
bhd.exe+2E17E: CC                             - int 3 
bhd.exe+2E17F: CC                             - int 3 
bhd.exe+2E180: 57                             - push edi
bhd.exe+2E181: FF 74 24 08                    - push [esp+08]
bhd.exe+2E185: 8B F9                          - mov edi,ecx
bhd.exe+2E187: E8 34 0A 00 00                 - call bhd.exe+2EBC0
bhd.exe+2E18C: FF 74 24 08                    - push [esp+08]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"inventory editor (character inventory not box)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Resident Evil / biohazard HD REMASTER
  Version: 
  Date   : 2025-03-26
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(itemEditor,bhd.exe,8D 04 C8 8B 00 85 C0 74 DA) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  lea eax,[eax+ecx*8]  // ecx = slot / eax = baseaddress
  mov [itemID],eax
  mov eax,[eax]  //
  jmp return

itemID:
dd 0

itemEditor:
  jmp newmem
return:
registersymbol(itemEditor)
registersymbol(itemID)

[DISABLE]

itemEditor:
  db 8D 04 C8 8B 00

unregistersymbol(itemEditor)
unregistersymbol(itemID)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bhd.exe+E8506

bhd.exe+E84E7: 75 26              - jne bhd.exe+E850F
bhd.exe+E84E9: 8B 0D A4 15 D8 00  - mov ecx,[bhd.exe+9815A4]
bhd.exe+E84EF: 5F                 - pop edi
bhd.exe+E84F0: 5E                 - pop esi
bhd.exe+E84F1: E9 CA B1 FA FF     - jmp bhd.exe+936C0
bhd.exe+E84F6: 8D 48 FC           - lea ecx,[eax-04]
bhd.exe+E84F9: A1 C0 C9 D7 00     - mov eax,[bhd.exe+97C9C0]
bhd.exe+E84FE: 83 C0 38           - add eax,38
bhd.exe+E8501: 83 F9 0A           - cmp ecx,0A
bhd.exe+E8504: 73 03              - jae bhd.exe+E8509
// ---------- INJECTING HERE ----------
bhd.exe+E8506: 8D 04 C8           - lea eax,[eax+ecx*8]
// ---------- DONE INJECTING  ----------
bhd.exe+E8509: 8B 00              - mov eax,[eax]
bhd.exe+E850B: 85 C0              - test eax,eax
bhd.exe+E850D: 74 DA              - je bhd.exe+E84E9
bhd.exe+E850F: 8B 0D A0 CA D7 00  - mov ecx,[bhd.exe+97CAA0]
bhd.exe+E8515: 50                 - push eax
bhd.exe+E8516: E8 C5 A8 FA FF     - call bhd.exe+92DE0
bhd.exe+E851B: 8B F8              - mov edi,eax
bhd.exe+E851D: 85 FF              - test edi,edi
bhd.exe+E851F: 74 21              - je bhd.exe+E8542
bhd.exe+E8521: 8B 35 A4 15 D8 00  - mov esi,[bhd.exe+9815A4]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"item  ID"</Description>
          <DropDownListLink>ITEMID</DropDownListLink>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>itemID</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"amount"</Description>
              <Options moAlwaysHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+4</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"ITEMID"</Description>
                  <DropDownList DisplayValueAsItem="1">1:Survival Knife (Jill)
2:Survival Knife (Chris)
3:Handgun 9mm (Beretta)
4:Self-Defense Gun (Dillinger)
5:Handgun .40SW (Inf Ammo)
6:Shotgun 12G
7:Grenade Launcher (Explosive)
8:Grenade Launcher (Acid)
9:Grenade Launcher (Flame)
10:Rocket Launcher (4 Barrel)
11:Magnum Revolver .357
12:Flame Thrower (Chris only?)
13:Assault Shotgun 12G (Richard's)
14:Rocket Launcher (Inf Ammo)
15:Magnum Revolver .44 (Barry's)
16:Grenade Shells (Explosive)
17:Handgun Magazine (9mm)
18:Shotgun Shells
19:Grenade Shells (Acid)
20:Grenade Shells (Flame)
21:Golden Arrow (Arrowhead)
22:Book of Curses (Sword Key)
23:Coin (Armor Key Imitation)
24:Collar (Coin (Armor Key Imitation))
25:Magnum Rounds
26:Broach (Emblem Key)
27:Fuel Canteen
28:Arrowhead
29:Armor Key Imitation
30:Residence Key (Gallery)
31:Fuel Supply Capsule
32:Musical Score (Moonlight Sonata)
33:First Aid Spray
34:Green Herb
35:Red Herb
36:Blue Herb
37:Herb Mix (Green 2x)
38:Herb Mix (Green 3x)
39:Herb Mix (Green + Red)
40:Herb Mix (Green + Red + Blue)
41:Herb Mix (Green + Blue)
42:Herb Mix (Green 2x + Blue)
43:Lockpick
44:Old key
45:Sword Key
63:Emblem Key
68:Ink Ribbon
</DropDownList>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>118</ID>
      <Description>"read HP / POISON in inventory"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : bhd.exe
  Version: 
  Date   : 2025-03-27
  Author : ZoDDeL

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(readHP,bhd.exe,8B AF BC 13 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [_readHP],edi

code:
  mov ebp,[edi+000013BC]
  jmp return

_readHP:
dd 0

readHP:
  jmp newmem
  nop
return:
registersymbol(readHP)
registersymbol(_readHP)

[DISABLE]

readHP:
  db 8B AF BC 13 00 00

unregistersymbol(readHP)
unregistersymbol(_readHP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bhd.exe+DD8E1

bhd.exe+DD8C1: 8B F1              - mov esi,ecx
bhd.exe+DD8C3: 8B 0D 38 C9 D7 00  - mov ecx,[bhd.exe+97C938]
bhd.exe+DD8C9: 57                 - push edi
bhd.exe+DD8CA: E8 F1 BF FA FF     - call bhd.exe+898C0
bhd.exe+DD8CF: 8B F8              - mov edi,eax
bhd.exe+DD8D1: 85 FF              - test edi,edi
bhd.exe+DD8D3: 0F 84 AF 00 00 00  - je bhd.exe+DD988
bhd.exe+DD8D9: 53                 - push ebx
bhd.exe+DD8DA: 8B 9F C0 13 00 00  - mov ebx,[edi+000013C0]
bhd.exe+DD8E0: 55                 - push ebp
// ---------- INJECTING HERE ----------
bhd.exe+DD8E1: 8B AF BC 13 00 00  - mov ebp,[edi+000013BC]
// ---------- DONE INJECTING  ----------
bhd.exe+DD8E7: 6A 04              - push 04
bhd.exe+DD8E9: 8B CF              - mov ecx,edi
bhd.exe+DD8EB: E8 70 A1 FB FF     - call bhd.exe+97A60
bhd.exe+DD8F0: 85 C0              - test eax,eax
bhd.exe+DD8F2: 75 15              - jne bhd.exe+DD909
bhd.exe+DD8F4: 6A 01              - push 01
bhd.exe+DD8F6: 8B CF              - mov ecx,edi
bhd.exe+DD8F8: E8 63 A1 FB FF     - call bhd.exe+97A60
bhd.exe+DD8FD: 85 C0              - test eax,eax
bhd.exe+DD8FF: 75 08              - jne bhd.exe+DD909
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>123</ID>
          <Description>"current HP"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>_readHP</Address>
          <Offsets>
            <Offset>13BC</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>124</ID>
              <Description>"max hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>122</ID>
              <Description>"poison (0 = no posion)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+1C8</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>if not syntaxcheck then

  getAutoAttachList().add("bhd.exe")



  function cycleFullCompact( sender, force )
    local state = not( compactmenuitem.Caption == 'Compact View Mode' )
    if force ~= nil then
      state = not force
    end
    compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'
    getMainForm().Splitter1.Visible = state
    getMainForm().Panel4.Visible = state
    getMainForm().Panel5.Visible = state
  end

  function addCompactMenu()
    if compactmenualreadyexists then return end
      local parent = getMainForm().Menu.Items
      compactmenuitem = createMenuItem( parent )
      parent.add( compactmenuitem )
      compactmenuitem.Caption = 'Compact View Mode'
      compactmenuitem.OnClick = cycleFullCompact
      compactmenualreadyexists = 'yes'
  end

  addCompactMenu()
  cycleFullCompact( nil, true )


  	function pushYoutube( sender, force )
		local state = not( youtubemenuitem.Caption == 'my Youtube' )
		if force ~= nil then
		   state = not force
		end
		youtubemenuitem.Caption = state and 'my Youtube' or 'my Youtube'
		if force == nil then
		shellExecute('https://www.youtube.com/@ZoDDeL')
		end
	end

	function addYoutubeButton()
		if donomenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		youtubemenuitem = createMenuItem( parent )
		parent.add( youtubemenuitem )
		youtubemenuitem.Caption = 'my Youtube'
		youtubemenuitem.OnClick = pushYoutube
		youtubemenualreadyexists = 'yes'
	end

	addYoutubeButton()
	pushYoutube( nil, true )


	function pushDono( sender, force )
		local state = not( donomenuitem.Caption == 'Thx for your Donation :)' )
		if force ~= nil then
		   state = not force
		end
		donomenuitem.Caption = state and 'Thx for your Donation :)' or 'Paypal Donation'
		if force == nil then
		shellExecute('https://paypal.me/zoddel')
		end
	end

	function addDonoButton()
		if donomenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		donomenuitem = createMenuItem( parent )
		parent.add( donomenuitem )
		donomenuitem.Caption = 'Thx for your Donation :)'
		donomenuitem.OnClick = pushDono
		donomenualreadyexists = 'yes'
	end

	addDonoButton()
	pushDono( nil, true )


	function pushGitHub( sender, force )
		local state = not( githubmenuitem.Caption == 'GitHub' )
		if force ~= nil then
		   state = not force
		end
		githubmenuitem.Caption = state and 'GitHub' or 'GitHub'
		if force == nil then
		shellExecute('https://github.com/ZoDDeL/CheatEngine-Tables')
		end
	end

	function addGitHubButton()
		if githubmenualreadyexists then return end
		local parent = getMainForm().Menu.Items
		githubmenuitem = createMenuItem( parent )
		parent.add( githubmenuitem )
		githubmenuitem.Caption = 'GitHub'
		githubmenuitem.OnClick = pushGitHub
		githubmenualreadyexists = 'yes'
	end

	addGitHubButton()
	pushGitHub( nil, true )


end

</LuaScript>
</CheatTable>
